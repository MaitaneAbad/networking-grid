{"version":3,"sources":["services/callToApi.js","components/CompanyCard.js","components/CompanyList.js","components/FilterByIndustry.js","components/Filters.js","components/Header.js","components/Footer.js","components/App.js","index.js"],"names":["callToApi","fetch","then","response","json","map","data","name","founded","id","industry","size","website","catch","error","console","log","CompanyCard","props","className","companyData","target","rel","href","CompanyList","list","length","FilterByIndustry","industryTipe","i","type","value","onClick","handleSearchIndustry","Filters","onSubmit","handleForm","searchIndustry","filterIndustry","handleReset","Header","Footer","App","useState","setData","setSearchIndustry","buttonHidden","setButtonHidden","useEffect","filterIndustryData","filter","sort","a","b","handleShowAll","ev","preventDefault","currentTarget","handleShowFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99b8054a.chunk.js","sourcesContent":["const callToApi = () => {\r\n  return fetch(\r\n    `https://challenges-asset-files.s3.us-east-2.amazonaws.com/jobMadrid/companies.json`\r\n  )\r\n    .then((response) => response.json())\r\n    .then((json) => {\r\n      const companies = json.map((data) => {\r\n        return {\r\n          name: data.name === null ? 'Desconocido' : data.name,\r\n          founded: data.founded === null ? 'Desconocido' : data.founded,\r\n          id: data.id,\r\n          industry: data.industry === null ? data.id : data.industry,\r\n          size: data.size === null ? 'Desconocido' : data.size,\r\n          website: data.website === null ? 'Desconocido' : data.website,\r\n        };\r\n      });\r\n      return companies;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport default callToApi;\r\n","const CompanyCard = (props) => {\r\n  return (\r\n    <>\r\n      <div className='list__card--item'>\r\n        <p className='list__card--item__name'> {props.companyData.name}.</p>\r\n        <p className='list__card--item__year'>\r\n          Fundada en: {props.companyData.founded}.\r\n        </p>\r\n      </div>\r\n      <div className='list__card--characteristics'>\r\n        <p className='list__card--characteristics__industry'>\r\n          {props.companyData.industry}.\r\n        </p>\r\n        <div className='list__card--characteristics__size'>\r\n          <p className='list__card--characteristics__size--contain'>\r\n            {props.companyData.size}.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className='list__card--link'>\r\n        <a\r\n          className='list__card--link__website'\r\n          target='_blank'\r\n          rel='noreferrer'\r\n          href={'http://' + props.companyData.website}\r\n        >\r\n          Website\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CompanyCard;\r\n","import '../styles/layout/companyList.scss';\r\nimport CompanyCard from './CompanyCard';\r\n\r\nconst CompanyList = (props) => {\r\n  const list = props.data.map((companyData) => {\r\n    return (\r\n      <li className='list__card' key={companyData.id}>\r\n        <CompanyCard companyData={companyData} />\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      {props.data.length !== 0 ? (\r\n        <ul className='list'>{list}</ul>\r\n      ) : (\r\n        <p>{`No exite ningun tipo de empresa con ese filtro.`}</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CompanyList;\r\n","const FilterByIndustry = (props) => {\r\n  const industryTipe = props.data.map((companyData, i) => {\r\n    return (\r\n      <input\r\n        className='header__form--button'\r\n        type='button'\r\n        value={companyData.industry}\r\n        key={i}\r\n        onClick={props.handleSearchIndustry}\r\n      />\r\n    );\r\n  });\r\n  return <> {industryTipe} </>;\r\n};\r\nexport default FilterByIndustry;\r\n","import FilterByIndustry from './FilterByIndustry';\r\n\r\nconst Filters = (props) => {\r\n  return (\r\n    <>\r\n      <form className='header__form' onSubmit={props.handleForm}>\r\n        <FilterByIndustry\r\n          data={props.data}\r\n          searchIndustry={props.filterIndustry}\r\n          handleSearchIndustry={props.handleSearchIndustry}\r\n        />\r\n      </form>\r\n      <form className='header__formReset'>\r\n        <input\r\n          type='button'\r\n          className='header__formReset--buttonReset'\r\n          onClick={props.handleReset}\r\n          value='Restablecer Filtros'\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default Filters;\r\n","import Filters from './Filters';\r\nimport '../styles/layout/header.scss';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className='header'>\r\n      <h1 className='header__title'>Portal de búsqueda de empresas</h1>\r\n      <Filters\r\n        data={props.data}\r\n        handleForm={props.handleForm}\r\n        searchIndustry={props.searchIndustry}\r\n        handleSearchIndustry={props.handleSearchIndustry}\r\n        handleReset={props.handleReset}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","// import '../styles/layout/header.scss';\r\n\r\nconst Footer = () => {\r\n  return <div className='footer'>&:Maitane</div>;\r\n};\r\nexport default Footer;\r\n","import '../styles/App.scss';\nimport { useState, useEffect } from 'react';\nimport callToApi from '../services/callToApi';\nimport CompanyList from './CompanyList';\n\nimport Header from './Header';\nimport Footer from './Footer';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [searchIndustry, setSearchIndustry] = useState('all');\n  const [buttonHidden, setButtonHidden] = useState('hidden');\n\n  useEffect(() => {\n    callToApi().then((response) => {\n      setData(response);\n    });\n  }, []);\n  const handleForm = (ev) => {\n    ev.preventDefault();\n  };\n  const handleReset = () => {\n    setSearchIndustry('all');\n  };\n  const handleSearchIndustry = (ev) => {\n    setSearchIndustry(ev.currentTarget.value);\n  };\n  const filterIndustryData = data\n    .filter(\n      (industryTipe) =>\n        searchIndustry === 'all' || industryTipe.industry === searchIndustry\n    )\n    .sort((a, b) => {\n      if (a.name > b.name) {\n        return 1;\n      } else if (a.name < b.name) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n  const handleShowAll = () => {\n    setSearchIndustry('all');\n  };\n  const handleShowFilter = () => {\n    if (buttonHidden === '') {\n      setButtonHidden('hidden');\n    } else {\n      setButtonHidden('');\n    }\n    handleShowAll();\n  };\n  return (\n    <>\n      <Header\n        data={data}\n        handleForm={handleForm}\n        searchIndustry={searchIndustry}\n        handleSearchIndustry={handleSearchIndustry}\n        handleReset={handleReset}\n        buttonHidden={buttonHidden}\n        handleShowFilter={handleShowFilter}\n        handleShowAll={handleShowAll}\n      />\n      <CompanyList data={filterIndustryData} />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","// Fichero src/index.js (código nuevo)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, //Le indicamos que el componente HashRouter es ahora la madre de App. Esto hace que tanto App como todos sus componentes hijas, nietas... puedan trabajar con las rutas.\n  document.getElementById('root') // estamos diciendo que vamos a usar las rutas con Hash.\n);\n\n//Nota: en el futuro cuando tengas acceso a la configuración de tu servidor y puedas usar el sistema moderno de rutas, tienes que cambiar en este fichero la palabra HashRouter por BrowserRouter.\n"],"sourceRoot":""}